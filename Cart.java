/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopping_cart;


import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author a
 */
public class Cart extends javax.swing.JFrame {
    
    public static ArrayList<String> arrlist1 = new ArrayList<String>();
    public static ArrayList<String> arrlist2 = new ArrayList<String>();
        
    double Cost = 0.0;
    double UnitPrice = 0.0;
    double fprice = 0.0;
    int x = 0;
    
    String[] Lst = new String[3];
    
    Customer customer = new Customer();
    
    PreparedStatement ps = null;
    PreparedStatement ps2 = null;
    PreparedStatement ps3 = null;
    double total_Price = 0.0;    
    
    /**
     * Creates new form Cart
     */
    public Cart() {
        initComponents();
        addToComboBox();
    }
    
    public void addToComboBox()
    {
        try
        {
            String sql = "select itemname from inventory order by itemname";
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##SEProject", "SEP");
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            
            while(rs.next())
            {
                String name = rs.getString("ItemName");
                Cart.Items.addItem(name);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        Cnumber = new javax.swing.JTextField();
        Items = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemslist = new javax.swing.JTable();
        BillNumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        totalp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        amountp = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        amountr = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        AButton = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        BButton = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        PButtton = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel2.setText("Name: ");

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel3.setText("Contact Number:");

        name.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        Cnumber.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N

        Items.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        Items.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Items" }));
        Items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemsMouseClicked(evt);
            }
        });
        Items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemsActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel4.setText("Choose Items:");

        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel5.setText("Quantity:");

        quantity.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N

        itemslist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Unit Price", "Quantity", "Cost"
            }
        ));
        jScrollPane1.setViewportView(itemslist);

        BillNumber.setEditable(false);
        BillNumber.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel6.setText("Total:");

        totalp.setEditable(false);
        totalp.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel7.setText("Amount Paid:");

        amountp.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        amountp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountpKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel8.setText("Return Amount:");

        amountr.setEditable(false);
        amountr.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 48)); // NOI18N
        jLabel1.setText("Shopping Cart");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(50, 50, 50))
        );

        AButton.setBackground(new java.awt.Color(204, 204, 204));
        AButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));

        jLabel10.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel10.setText("    Add");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel10MouseExited(evt);
            }
        });

        javax.swing.GroupLayout AButtonLayout = new javax.swing.GroupLayout(AButton);
        AButton.setLayout(AButtonLayout);
        AButtonLayout.setHorizontalGroup(
            AButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        AButtonLayout.setVerticalGroup(
            AButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        BButton.setBackground(new java.awt.Color(204, 204, 204));
        BButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));

        jLabel9.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel9.setText("     Back");
        jLabel9.setToolTipText("");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel9MouseExited(evt);
            }
        });

        javax.swing.GroupLayout BButtonLayout = new javax.swing.GroupLayout(BButton);
        BButton.setLayout(BButtonLayout);
        BButtonLayout.setHorizontalGroup(
            BButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
        );
        BButtonLayout.setVerticalGroup(
            BButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        PButtton.setBackground(new java.awt.Color(204, 204, 204));
        PButtton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));

        jLabel11.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel11.setText("    Proceed");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel11MouseExited(evt);
            }
        });

        javax.swing.GroupLayout PButttonLayout = new javax.swing.GroupLayout(PButtton);
        PButtton.setLayout(PButttonLayout);
        PButttonLayout.setHorizontalGroup(
            PButttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        PButttonLayout.setVerticalGroup(
            PButttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PButtton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(name))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(Items, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(Cnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(55, 55, 55)
                                .addComponent(AButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6)
                                .addComponent(totalp)
                                .addComponent(jLabel7)
                                .addComponent(amountp)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(amountr))
                            .addComponent(BillNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BillNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(Cnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(Items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(totalp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PButtton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(996, 663));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemsActionPerformed
        
        for(int a = 0; a < itemslist.getRowCount(); a++)
        {
            if(Items.getSelectedItem().equals(itemslist.getValueAt(a, 0)))
            {
                int newquan = Integer.parseInt(JOptionPane.showInputDialog(this, "This product is already in the list. \nDo you want to Update the quantity?"));
                double newprice = newquan * Double.parseDouble(itemslist.getValueAt(a, 1).toString());
                itemslist.setValueAt(newquan, a, 2);
                itemslist.setValueAt(newprice, a, 3);
                
                Items.setSelectedItem("Select Items");
            }
        }
        
    }//GEN-LAST:event_ItemsActionPerformed

    private void ItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemsMouseClicked
    }//GEN-LAST:event_ItemsMouseClicked

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void amountpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountpKeyReleased

        double returnp = Double.parseDouble(amountp.getText()) - Double.parseDouble(totalp.getText());
        amountr.setText(String.valueOf(returnp));

    }//GEN-LAST:event_amountpKeyReleased

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        
        DefaultTableModel table = (DefaultTableModel)itemslist.getModel();
        Customer customer = new Customer();
        
        try 
        { 
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##SEProject", "SEP");
            String sqlstring = "select quantity from inventory where itemname=?";
            PreparedStatement preparedStatement = con.prepareStatement(sqlstring);
            preparedStatement.setString(1, Items.getSelectedItem().toString());
            
            ResultSet resultSet = preparedStatement.executeQuery();
            
            while (resultSet.next())
            {
                int tempquan = resultSet.getInt("quantity");
                
                if (tempquan < Integer.parseInt(quantity.getText()))
                {
                    JOptionPane.showMessageDialog(this, Items.getSelectedItem().toString() + " is not availabe or has exceeded the amount then in the inventory.");
                    quantity.setText("");
                    Items.setSelectedItem("Select Items");
                }
                else
                {
                    if (Items.getSelectedItem().equals("Select Items"))
                    {
                        JOptionPane.showMessageDialog(this, "Please Select an Item.");
                    }
                    else
                    {
                        String sql = "select unitprice from inventory where itemname=?";
                        ps = con.prepareStatement(sql);
                        ps.setString(1, String.valueOf(Items.getSelectedItem()));

                        ResultSet rs = ps.executeQuery();

                        while(rs.next())
                        {
                            String UPrice = rs.getString("UnitPrice");

                            Cost = Double.parseDouble(UPrice) * Integer.parseInt(quantity.getText());                

                            String[] data = {String.valueOf(Items.getSelectedItem()), String.valueOf(UPrice), quantity.getText(), String.valueOf(Cost)};
                            table.addRow(data);

                            total_Price += Cost;
                            totalp.setText(String.valueOf(total_Price));
                        }
                        quantity.setText("");
                        Items.setSelectedItem("Select Items");
                    }
                }
            }
        }
        catch (NumberFormatException e) 
        {
            JOptionPane.showMessageDialog(this, "Enter Correctly");
        } 
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered

        Color clr = new Color(153, 153, 153);
        AButton.setBackground(clr);

    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseExited

        Color clr = new Color(204, 204, 204);
        AButton.setBackground(clr);

    }//GEN-LAST:event_jLabel10MouseExited

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked

        Admin_Portal ap = new Admin_Portal();
        ap.setVisible(true);
        dispose();

    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseEntered

        Color clr = new Color(153, 153, 153);
        BButton.setBackground(clr);

    }//GEN-LAST:event_jLabel9MouseEntered

    private void jLabel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseExited

        Color clr = new Color(204, 204, 204);
        BButton.setBackground(clr);

    }//GEN-LAST:event_jLabel9MouseExited

    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered

        Color clr = new Color(153, 153, 153);
        PButtton.setBackground(clr);

    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseExited

        Color clr = new Color(204, 204, 204);
        PButtton.setBackground(clr);

    }//GEN-LAST:event_jLabel11MouseExited

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked

        try
        {
            if (amountp.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Cash Not Recieved or Invalid Entry");
//                DefaultTableModel tblmodel = (DefaultTableModel) itemslist.getModel();
//
//                customer.setName(name.getText());
//                customer.setPhoneNumber(Long.parseLong(Cnumber.getText()));
//
//                String sql1 = "insert into customer (BillID, CustomerName, CustomerNumber, Number_of_Order)values (?, ?, ?, ?)";
//                String sql2 = "insert into orders (BillID, ItemName, UnitPrice, Quantity, TotalPrice)values (?, ?, ?, ?, ?)";
//                String sql3 = "select UnitPrice from inventory where ItemName=?";
//
//                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##SEProject", "SEP");
//
//                PreparedStatement ps1 = con.prepareStatement(sql1);
//                PreparedStatement ps2 = con.prepareStatement(sql2);
//                PreparedStatement ps3 = con.prepareStatement(sql3);
//
//                ps1.setString(1, BillNumber.getText());
//                ps1.setString(2, name.getText());
//                ps1.setString(3, Cnumber.getText());
//                ps1.setString(4, "0");
//
//                ps1.executeUpdate();
//
//                for (int i = 0; i < tblmodel.getRowCount(); i++)
//                {
//                    ps2.setString(1, BillNumber.getText());
//                    ps2.setString(2, tblmodel.getValueAt(i, 0).toString());
//                    ps2.setString(3, tblmodel.getValueAt(i, 1).toString());
//                    ps2.setString(4, tblmodel.getValueAt(i, 2).toString());
//                    ps2.setString(5, tblmodel.getValueAt(i, 3).toString());
//
//                    ps2.executeUpdate();
//                }
//
//
//                //JOptionPane.showMessageDialog(this, "Confirmed");
//
//                String sql = "select quantity, itemname from inventory where itemname=?";
//                String sqlString = "update inventory set quantity=? where itemname=?";
//                PreparedStatement preparedStatement = con.prepareStatement(sql);
//                PreparedStatement preparedStatement1 = con.prepareStatement(sqlString);
//
//                for (int j = 0; j < tblmodel.getRowCount(); j++)
//                {
//                    preparedStatement.setString(1, tblmodel.getValueAt(j, 0).toString());
//                    ResultSet rst = preparedStatement.executeQuery();
//
//                    if (rst.next())
//                    {
//                        int tempquan = Integer.parseInt(rst.getString("Quantity"));
//                        int newquan = tempquan - Integer.parseInt(tblmodel.getValueAt(j, 2).toString());
//                        String itemnameString = rst.getString("ItemName");
//
//                        if (tempquan < Integer.parseInt(tblmodel.getValueAt(j, 2).toString()))
//                        {
//                            JOptionPane.showMessageDialog(this, itemnameString + " is not availabe.");
//                        }
//                        else
//                        {
//                            preparedStatement1.setString(1, String.valueOf(newquan));
//                            preparedStatement1.setString(2, itemnameString);
//                            preparedStatement1.executeUpdate();
//                        }
//                    }
//                }
//                con.close();
//                
//                Admin_Portal ap = new Admin_Portal();
//                ap.setVisible(true);
//                dispose();
            }
            else
            {
                DefaultTableModel tblmodel = (DefaultTableModel) itemslist.getModel();

                customer.setName(name.getText());
                customer.setPhoneNumber(Long.parseLong(Cnumber.getText()));

                String sql1 = "insert into customer (BillID, CustomerName, CustomerNumber, Number_of_Order)values (?, ?, ?, ?)";
                String sql2 = "insert into orders (BillID, ItemName, UnitPrice, Quantity, TotalPrice)values (?, ?, ?, ?, ?)";
                String sql3 = "select UnitPrice from inventory where ItemName=?";

                Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##SEProject", "SEP");

                PreparedStatement ps1 = con.prepareStatement(sql1);
                PreparedStatement ps2 = con.prepareStatement(sql2);
                PreparedStatement ps3 = con.prepareStatement(sql3);

                ps1.setString(1, BillNumber.getText());
                ps1.setString(2, name.getText());
                ps1.setString(3, Cnumber.getText());
                ps1.setString(4, "0");

                ps1.executeUpdate();

                for (int i = 0; i < tblmodel.getRowCount(); i++)
                {
                    ps2.setString(1, BillNumber.getText());
                    ps2.setString(2, tblmodel.getValueAt(i, 0).toString());
                    ps2.setString(3, tblmodel.getValueAt(i, 1).toString());
                    ps2.setString(4, tblmodel.getValueAt(i, 2).toString());
                    ps2.setString(5, tblmodel.getValueAt(i, 3).toString());

                    ps2.executeUpdate();
                }


                //JOptionPane.showMessageDialog(this, "Confirmed");

                String sql = "select quantity, itemname from inventory where itemname=?";
                String sqlString = "update inventory set quantity=? where itemname=?";
                PreparedStatement preparedStatement = con.prepareStatement(sql);
                PreparedStatement preparedStatement1 = con.prepareStatement(sqlString);

                for (int j = 0; j < tblmodel.getRowCount(); j++)
                {
                    preparedStatement.setString(1, tblmodel.getValueAt(j, 0).toString());
                    ResultSet rst = preparedStatement.executeQuery();

                    if (rst.next())
                    {
                        int tempquan = Integer.parseInt(rst.getString("Quantity"));
                        int newquan = tempquan - Integer.parseInt(tblmodel.getValueAt(j, 2).toString());
                        String itemnameString = rst.getString("ItemName");
                        
                        preparedStatement1.setString(1, String.valueOf(newquan));
                        preparedStatement1.setString(2, itemnameString);
                        preparedStatement1.executeUpdate();
                    }
                }
                con.close();
                
                Admin_Portal ap = new Admin_Portal();
                ap.setVisible(true);
                dispose();
            }
            
            
//            double price = 0.0;
//            
//            for (int i = 0; i < tblmodel.getRowCount(); i++)
//            {
//                price += Double.parseDouble(tblmodel.getValueAt(i, 3).toString());
//            }
        }
        catch (NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Enter Complete Data");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_jLabel11MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AButton;
    private javax.swing.JPanel BButton;
    protected static javax.swing.JTextField BillNumber;
    protected static javax.swing.JTextField Cnumber;
    protected static javax.swing.JComboBox<String> Items;
    private javax.swing.JPanel PButtton;
    private javax.swing.JTextField amountp;
    private javax.swing.JTextField amountr;
    protected static javax.swing.JTable itemslist;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    protected static javax.swing.JTextField name;
    private javax.swing.JTextField quantity;
    protected static javax.swing.JTextField totalp;
    // End of variables declaration//GEN-END:variables
}
