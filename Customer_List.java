/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopping_cart;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author a
 */
public final class Customer_List extends javax.swing.JFrame {

    /**
     * Creates new form Customer_List
     */
    public Customer_List() {
        initComponents();
        tableHeader();
        rowHieght();
    }
    
    public void tableHeader()
    {
        JTableHeader tableHeader = clist.getTableHeader();
        tableHeader.setFont(new Font("Microsoft Sans Serif", Font.PLAIN, 20));
        JTableHeader tableHeader1 = POrder.getTableHeader();
        tableHeader1.setFont(new Font("Microsoft Sans Serif", Font.PLAIN, 20));
    }
    
    public void rowHieght()
    {
        clist.setRowHeight(40);
        POrder.setRowHeight(40);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clist = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        bID = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        POrder = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CName = new javax.swing.JLabel();
        CNum = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TAmount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        PAmount = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        RAmount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        RNumber = new javax.swing.JTextField();
        BButton = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        PButton = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        clist.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        clist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BillID", "Customer Name"
            }
        ));
        clist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clistMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(clist);

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 36)); // NOI18N
        jLabel2.setText("Bill ID:");

        bID.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 36)); // NOI18N
        bID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bIDKeyReleased(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 48)); // NOI18N
        jLabel1.setText("Customer List");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(564, 564, 564))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        POrder.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        POrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Unit Price", "Quantity", "Cost"
            }
        ));
        jScrollPane1.setViewportView(POrder);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopping_cart/Icons/Untitled design (6).png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel4.setText("Customer Name:");

        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel5.setText("Contact Number:");

        CName.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N

        CNum.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel6.setText("Total:");

        TAmount.setEditable(false);
        TAmount.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel7.setText("Amount Paid:");

        PAmount.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        PAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PAmountKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel8.setText("Amount Returned:");

        RAmount.setEditable(false);
        RAmount.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        jLabel9.setText("Reciept Number:");

        RNumber.setEditable(false);
        RNumber.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N

        BButton.setBackground(new java.awt.Color(204, 204, 204));
        BButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));

        jLabel11.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel11.setText("     Back");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel11MouseExited(evt);
            }
        });

        javax.swing.GroupLayout BButtonLayout = new javax.swing.GroupLayout(BButton);
        BButton.setLayout(BButtonLayout);
        BButtonLayout.setHorizontalGroup(
            BButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        BButtonLayout.setVerticalGroup(
            BButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        PButton.setBackground(new java.awt.Color(204, 204, 204));
        PButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));

        jLabel10.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 20)); // NOI18N
        jLabel10.setText("    Proceed");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel10MouseExited(evt);
            }
        });

        javax.swing.GroupLayout PButtonLayout = new javax.swing.GroupLayout(PButton);
        PButton.setLayout(PButtonLayout);
        PButtonLayout.setHorizontalGroup(
            PButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
        );
        PButtonLayout.setVerticalGroup(
            PButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(CName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(bID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(CNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(RNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(TAmount)
                            .addComponent(jLabel7)
                            .addComponent(PAmount)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(TAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(PAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(RAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(PButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(BButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bID, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(RNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(CName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(1, 1, 1)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(CNum, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bIDKeyReleased
         
//        search(bID.getText());
        
    }//GEN-LAST:event_bIDKeyReleased

    private void clistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clistMouseClicked

        
        DefaultTableModel tableModel = (DefaultTableModel)clist.getModel();
        int tempnum = 0;
        
        try 
        {
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##SEProject", "SEP");
            
            String bill_id = tableModel.getValueAt(clist.getSelectedRow(), 0).toString();
            String sql2 = "select number_of_order from customer where billid=?";
            PreparedStatement ps2 = con.prepareStatement(sql2);
            ps2.setString(1, bill_id);
            
            ResultSet rs2 = ps2.executeQuery();
            
            while (rs2.next())
            {
                tempnum = Integer.parseInt(rs2.getString("number_of_order"));
            }
            

            String sql = "select itemname, quantity, unitprice, totalprice from orders where billid=?";
            String sql1 = "select customernumber from customer where billid=?";
            PreparedStatement pst = con.prepareStatement(sql);
            PreparedStatement pst1 = con.prepareStatement(sql1);
            pst.setString(1, bill_id);
            pst1.setString(1, bill_id);
            ResultSet rs = pst.executeQuery();
            ResultSet rs1 = pst1.executeQuery();

            Profile_Order po = new Profile_Order();
            po.setVisible(true);

            while (rs.next())
            {
                String itemname = rs.getString("ItemName");
                int quantity = Integer.parseInt(rs.getString("Quantity"));
                int unitprice = Integer.parseInt(rs.getString("UnitPrice"));
                int cost = Integer.parseInt(rs.getString("TotalPrice"));

                Object TbData[] = {itemname, unitprice, quantity, cost};

                DefaultTableModel model = (DefaultTableModel)Profile_Order.RCP.getModel();

                model.addRow(TbData);
                Profile_Order.name.setText(tableModel.getValueAt(clist.getSelectedRow(), 1).toString());
                Profile_Order.bid.setText(tableModel.getValueAt(clist.getSelectedRow(), 0).toString());
            } 
            while (rs1.next())
            {
                String number = rs1.getString("CustomerNumber");
                Profile_Order.contact.setText(number);
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, e);
        }
        
    }//GEN-LAST:event_clistMouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked

        DefaultTableModel tblmodel = (DefaultTableModel) POrder.getModel();
        
        try 
        {
            Connection con  = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##SEProject", "SEP");
            String sqlString = "select max(BillID) from customer";
            Statement stm = con.createStatement();
            ResultSet rst = stm.executeQuery(sqlString);
            
            int lastBillID = 0;
            
            if(rst.next())
            {
                lastBillID = rst.getInt(1);
                
                if (Integer.parseInt(bID.getText()) > lastBillID)
                {
                    JOptionPane.showMessageDialog(this, "No Record Exist");
                    bID.setText("");
                }
                else
                {
                    if (tblmodel.getRowCount() != 0)
                    {
                        tblmodel.setRowCount(0);
                    }

                    String biString = bID.getText();
                    String sql = "select itemname, quantity, unitprice, totalprice from orders where billid=?";
                    String sql1 = "select customernumber, customername from customer where billid=?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    PreparedStatement pst1 = con.prepareStatement(sql1);
                    pst.setString(1, biString);
                    pst1.setString(1, biString);
                    ResultSet rs = pst.executeQuery();
                    ResultSet rs1 = pst1.executeQuery();

                    while (rs.next())
                    {
                        String itemname = rs.getString("ItemName");
                        String quantity = rs.getString("Quantity");
                        String unitprice = rs.getString("UnitPrice");
                        String cost = rs.getString("TotalPrice");

                        String TbData[] = {itemname, unitprice, quantity, cost};

                        DefaultTableModel model = (DefaultTableModel)POrder.getModel();

                        model.addRow(TbData);
                    } 
                    while (rs1.next())
                    {
                        String number = rs1.getString("CustomerNumber");
                        String name = rs1.getString("CustomerName");

                        CName.setText(name);
                        CNum.setText(number);
                    }

                    double totalamount = 0.0;
                    for (int i = 0; i < tblmodel.getRowCount(); i++)
                    {
                        totalamount += Double.parseDouble(tblmodel.getValueAt(i, 3).toString());
                    }
                    TAmount.setText(String.valueOf(totalamount));
                    
                    RNumber.setText(bID.getText());
                    bID.setText("");
                }
            }
        } 
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, e);
        }
        
    }//GEN-LAST:event_jLabel3MouseClicked

    private void PAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PAmountKeyReleased

        double returnp = Double.parseDouble(PAmount.getText()) - Double.parseDouble(TAmount.getText());
        RAmount.setText(String.valueOf(returnp));

    }//GEN-LAST:event_PAmountKeyReleased

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered

        Color clr = new Color(153, 153, 153);
        PButton.setBackground(clr);

    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseExited

        Color clr = new Color(204, 204, 204);
        PButton.setBackground(clr);

    }//GEN-LAST:event_jLabel10MouseExited

    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered

        Color clr = new Color(153, 153, 153);
        BButton.setBackground(clr);

    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseExited

        Color clr = new Color(204, 204, 204);
        BButton.setBackground(clr);

    }//GEN-LAST:event_jLabel11MouseExited

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked

        Admin_Portal ap = new Admin_Portal();
        ap.setVisible(true);
        dispose();

    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked

        DefaultTableModel tableModel = (DefaultTableModel) POrder.getModel();
        
        try 
        {
            Connection con  = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "c##SEProject", "SEP");
            String sqlstring = "select quantity from inventory where itemname=?";
            PreparedStatement preparedStatement2 = con.prepareStatement(sqlstring);
            
            for (int i = 0; i < tableModel.getRowCount(); i++)
            {
                preparedStatement2.setString(1, tableModel.getValueAt(i, 0).toString());
            
                ResultSet resultSet = preparedStatement2.executeQuery();

                while (resultSet.next())
                {
                    int tempquan = resultSet.getInt("quantity");

                    if (tempquan < Integer.parseInt(tableModel.getValueAt(i, 2).toString()))
                    {
                        JOptionPane.showMessageDialog(this, tableModel.getValueAt(i, 0).toString() + " is not availabe or has exceeded the amount then in the inventory.");
                        PAmount.setText("");
                        RAmount.setText("");
                        TAmount.setText("");
                        tableModel.setRowCount(0);
                    }
                    else
                    {
                        if (PAmount.getText().isEmpty())
                        {
                            JOptionPane.showMessageDialog(this, "Cash Not Recieved or Invalid Entry");
                        }
                        else
                        {
                            String sql2 = "update customer set number_of_order=? where billid=?";
                            String sql3 = "select number_of_order from customer where billid=?";
                            PreparedStatement ps2 = con.prepareStatement(sql2);
                            PreparedStatement ps3 = con.prepareStatement(sql3);
                            ps2.setString(2, RNumber.getText());
                            ps3.setString(1, RNumber.getText());

                            ResultSet rst = ps3.executeQuery();

                            int numoforder = 0;

                            while (rst.next())
                            {
                                numoforder = Integer.parseInt(rst.getString("number_of_order"));
                                numoforder++;
                                ps2.setString(1, String.valueOf(numoforder));
                            }

                            ps2.executeUpdate();

                            String sqlString = "select quantity from inventory where itemname=?";
                            String sqlString1 = "update inventory set quantity=? where itemname=?";
                            PreparedStatement preparedStatement = con.prepareStatement(sqlString);
                            PreparedStatement preparedStatement1 = con.prepareStatement(sqlString1);

                            for(int j = 0; j < tableModel.getRowCount(); j++)
                            {
                                preparedStatement.setString(1, tableModel.getValueAt(j, 0).toString());
                                ResultSet resultSet1 = preparedStatement.executeQuery();

                                if (resultSet1.next())
                                {
                                    int tempquan1 = Integer.parseInt(resultSet1.getString("Quantity"));
                                    int newquan = tempquan1 - Integer.parseInt(tableModel.getValueAt(i, 2).toString());

                                    preparedStatement1.setString(1, String.valueOf(newquan));
                                    preparedStatement1.setString(2, tableModel.getValueAt(i, 0).toString());
                                    preparedStatement1.executeUpdate();
                                }
                            }
                        }
                    }
                }
            }
            Admin_Portal ap = new Admin_Portal();
            ap.setVisible(true);
            dispose();
        }
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_jLabel10MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer_List().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BButton;
    private javax.swing.JLabel CName;
    private javax.swing.JLabel CNum;
    private javax.swing.JTextField PAmount;
    private javax.swing.JPanel PButton;
    private javax.swing.JTable POrder;
    private javax.swing.JTextField RAmount;
    private javax.swing.JTextField RNumber;
    private javax.swing.JTextField TAmount;
    private javax.swing.JTextField bID;
    protected static javax.swing.JTable clist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
